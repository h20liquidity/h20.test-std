networks:
  base-test: 
    rpc: https://mainnet.base.org
    chain-id: 8453 
    network-id: 8453 
    currency: ETH

subgraphs:
  base-test: https://api.goldsky.com/api/public/project_clv14x04y9kzi01saerx7bxpg/subgraphs/ob4-base/0.3/gn
  
orderbooks:
  base-test:
    address: 0x80DE00e3cA96AE0569426A1bb1Ae22CD4181dE6F
    network: base-test
    subgraph: base-test

deployers:
  base-test:
    address: 0x56394785a22b3BE25470a0e03eD9E0a939C47b9b
    network: base-test

tokens:
  base-red:
    network: base-test
    address: 0x222789334D44bB5b2364939477E15A6c981Ca165
  base-blue:
    network: base-test
    address: 0x6d3AbB80c3CBAe0f60ba274F36137298D8571Fbe


orders:
  base-order:
    inputs:
      - token: base-red
        vault-id: 0x58f0bb181e38b0bfecbf503744e46ee3fe517425c56655288f640ad008930ca5
    outputs:
      - token: base-blue
        vault-id: 0x58f0bb181e38b0bfecbf503744e46ee3fe517425c56655288f640ad008930ca5

scenarios:
    base-order-simulations:
        network: base-test
        deployer: base-test
        orderbook: base-test
        runs: 100
        bindings:
          # Ask for now, registry in future.
          orderbook-subparser: 0x5CeEe9F4F49C106D5Bc049C8D649C332E6d365ad
          max-output: 0.0000000000000001
          io-ratio: 0.001

charts:
  base-simulation:
    scenario: base-order-simulations
    plots:
      $ amount vs ratio:
        marks:
          - type: line
            options:
              x: 0.0
              y: 0.1

deployments:
  buy-order:
    scenario: base-order-simulations
    order: base-order

---
#orderbook-subparser !The subparser for the Orderbook words
#max-output !OrderBook max output
#io-ratio !OrderBook order ratio

#amount-key "amount-key"
#ratio-key "ratio-key"

#calculate-io
  using-words-from orderbook-subparser
  _: get(hash(order-hash() amount-key)),
  _: get(hash(order-hash() ratio-key));

#handle-io
 :;

#post-add-order
 using-words-from orderbook-subparser
 :set(hash(order-hash() amount-key) max-output),
 :set(hash(order-hash() ratio-key) io-ratio);